{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Employee } from 'src/app/models/employee.model';\nlet Register = class Register {\n  constructor(employeeService, cosSenterService, formBuilder) {\n    this.employeeService = employeeService;\n    this.cosSenterService = cosSenterService;\n    this.formBuilder = formBuilder;\n    this.raw6155 = ' ';\n    this.rawiu6l = ' ';\n    this.submitted = false;\n    this.employee = new Employee();\n    this.cos_centers = [];\n    this.managers = []; //select \n\n    this.form = new FormGroup({\n      name: new FormControl(''),\n      cos_center: new FormControl(''),\n      manager: new FormControl(''),\n      nr_of_phone: new FormControl(''),\n      password: new FormControl(''),\n      email: new FormControl(''),\n      code: new FormControl('')\n    });\n  }\n\n  ngOnInit() {\n    this.employeeService.getEmployee().subscribe(response => console.log(response)); //consola\n\n    this.employeeService.getManager().subscribe(response => console.log(response)); //consola\n\n    this.employeeService.getManager().subscribe(response => this.managers = response); //html\n\n    this.cosSenterService.getCosCenter().subscribe(response => this.cos_centers = response); //html\n\n    this.cosSenterService.getCosCenter().subscribe(response => console.log(response)); //consola\n\n    this.form = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(20)]],\n      cos_center: ['', Validators.required],\n      manager: ['', Validators.required],\n      nr_of_phone: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10), Validators.pattern(\"^[0-9]*$\")]],\n      password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(15)]],\n      email: ['', [Validators.required, Validators.email]],\n      code: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(10), Validators.pattern(\"^[0-9]*$\")]]\n    });\n  } //select\n\n\n  get cosCenter() {\n    return this.form.get('cos_center');\n  }\n\n  changeCosCenter(e) {\n    this.cosCenter.setValue(e.target.value, {\n      onlySelf: true\n    });\n  }\n\n  get ManagerVal() {\n    return this.form.get('manager');\n  }\n\n  changeManager(e) {\n    this.ManagerVal.setValue(e.target.value, {\n      onlySelf: true\n    });\n  }\n\n  get f() {\n    return this.form.controls;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.form.invalid) {\n      return;\n    }\n\n    console.log(JSON.stringify(this.form.value, null, 2));\n  }\n\n  createEmployee() {\n    console.log(this.employee);\n    this.employeeService.createEmployee(this.employee).subscribe(data => console.log(\"CREATE!!\"));\n  }\n\n};\nRegister = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: 'register.component.html',\n  styleUrls: ['register.component.css']\n})], Register);\nexport { Register };","map":null,"metadata":{},"sourceType":"module"}